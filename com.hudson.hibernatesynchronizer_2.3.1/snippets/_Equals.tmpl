:Equals
Method for the base objects to determine equality
#if ($class.Id || $class.AlternateKeys.size() > 0)
#if ($class.Id.hasExternalClass())
	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof ${class.FullBaseClassName})) return false;
		else {
			${class.FullBaseClassName} mObj = (${class.FullBaseClassName}) obj;
#if ($class.AlternateKeys.size() == 0)
#if ($class.Id.Property.isPrimitive())
			return (this.${class.Id.Property.GetterName}() == mObj.${class.Id.Property.GetterName}());
#else
			if (null == this.${class.Id.Property.GetterName}() || null == mObj.${class.Id.Property.GetterName}()) return false;
			else return (this.${class.Id.Property.GetterName}().equals(mObj.${class.Id.Property.GetterName}()));
#end
#else
			boolean isEqual = true;
#foreach ($prop in $class.AlternateKeys)
#if ($prop.isPrimitive())
			isEqual = isEqual && (this.${prop.GetterName}() == mObj.${prop.GetterName}());
#else
			if (null == this.${prop.GetterName}() || null == mObj.${prop.GetterName}()) return false;
			else isEqual = isEqual && (this.${prop.GetterName}().equals(mObj.${prop.GetterName}()));
#end
#end
			return isEqual;
#end
		}
	}
#else
	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof ${class.FullClassName})) return false;
		else {
			${class.FullClassName} mObj = (${class.FullClassName}) obj;
#foreach ($prop in $class.Id.Properties)
#if ($prop.isPrimitive())
			if (this.${prop.GetterName}() != mObj.${prop.GetterName}()) {
				return false;
			}
#else
			if (null != this.${prop.GetterName}() && null != mObj.${prop.GetterName}()) {
				if (!this.${prop.GetterName}().equals(mObj.${prop.GetterName}())) {
					return false;
				}
			}
			else {
				return false;
			}
#end
#end
#if ($class.Id.Properties.size() > 0)
			return true;
#else
			return super.equals(obj);
#end
		}
	}
#end
#end